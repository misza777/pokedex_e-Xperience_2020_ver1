{"version":3,"sources":["img/pikaPokemon.png","img/nodata.png","services/pokemon.js","components/SearchGenderForm/index.js","components/SearchGenderForm/SearchGenderForm.js","components/SearchNameForm/index.js","components/SearchNameForm/SearchNameForm.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/SimplePagination/index.js","components/SimplePagination/SimplePagination.js","components/AdvancedPagination/index.js","components/AdvancedPagination/AdvancedPagination.js","helpers/pokemonColorTypes.js","components/Card/Card.js","components/PokemonContent/index.js","components/PokemonContent/PokemonContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getAllPokemon","url","a","Promise","resolve","reject","fetch","then","res","json","data","emptyJson","abilities","ability","name","id","sprites","back_default","back_shiny","front_default","front_shiny","types","type","height","weight","getSinglePokemon","response","ok","SearchGenderForm","handleGenderSearch","useState","gender","setGender","className","onSubmit","e","preventDefault","placeholder","value","onChange","target","SearchNameForm","handleNameSearch","setName","Navbar","props","initial","src","pokeLogo","alt","onClick","handleClickHome","SimplePagination","prev","next","AdvancedPagination","pokemonPerPage","totalPokemons","paginate","pageNumbers","i","Math","ceil","push","map","number","key","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","Card","active","setActive","pokemon","pokemonFrontFoto","pokemonBackFoto","pokemonBackShinyFoto","nodata","typeArr","style","backgroundColor","pokemonColorTypes","PokemonContent","pokemonData","loading","App","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","setLoading","searching","setSearching","currentPage","setCurrentPage","setTotalPokemons","initialUrl","useEffect","previous","loadingSinglePokemon","results","fetchData","currentUrl","_pokemonData","Array","pokemonGenderArray","pokemon_species_details","pokemonName","pokemon_species","length","chunked_arr","chunk","console","log","currentPokemonArr","loadingSearchedPokemon","all","pokemonRecord","pageNumber","array","size","index","slice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebc36108.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pikaPokemon.9672f4f4.png\";","module.exports = __webpack_public_path__ + \"static/media/nodata.acf81815.png\";","export async function getAllPokemon(url) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => resolve(data));\r\n  });\r\n}\r\n\r\n// export async function getSinglePokemon(url) {\r\n//   return new Promise((resolve, reject) => {\r\n//     fetch(url)\r\n//     .then((res) => res.json())\r\n//     .then((data) => resolve(data))\r\n\r\n//   });\r\n// }\r\n\r\nconst emptyJson =\r\n  //empty Json file\r\n  {\r\n    abilities: [\r\n      {\r\n        ability: {\r\n          name: \"no ability\",\r\n        },\r\n      },\r\n    ],\r\n    id: 1,\r\n    name: \"Sorry! No Pokemon in Database\",\r\n    sprites: {\r\n      back_default: \"\",\r\n      back_shiny: \"\",\r\n      front_default: \"\",\r\n      front_shiny: \"\",\r\n    },\r\n    types: [\r\n      {\r\n        type: {\r\n          name: \"no types\",\r\n        },\r\n      },\r\n    ],\r\n    height: \"none\",\r\n    weight: \"none\",\r\n  };\r\n\r\nexport async function getSinglePokemon(url) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return emptyJson;\r\n        // throw new Error(response.statusText);)\r\n      })\r\n      .then((data) => resolve(data));\r\n  });\r\n}\r\n","import SearchGenderForm from \"./SearchGenderForm\";\r\n\r\nexport default SearchGenderForm;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SearchGenderForm = ({ handleGenderSearch }) => {\r\n  //hook\r\n  const [gender, setGender] = useState(\"1\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleGenderSearch(gender);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search_container\">\r\n      <form className=\"search__form\" onSubmit={handleSubmit}>\r\n        <select\r\n          className=\"search__form-input\"\r\n          name=\"gender\"\r\n          id=\"gender\"\r\n          placeholder=\"Gender\"\r\n          value={gender}\r\n          onChange={(e) => setGender(e.target.value)}\r\n        >\r\n          <option value=\"1\">Female</option>\r\n          <option value=\"2\">Male</option>\r\n          <option value=\"3\">Genderless</option>\r\n        </select>\r\n        <button className=\"form__btn\" type=\"submit\">\r\n          Choose Gender\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchGenderForm;\r\n","import SearchNameForm from \"./SearchNameForm\";\r\n\r\nexport default SearchNameForm;\r\n","import React, { useState } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nconst SearchNameForm = ({ handleNameSearch }) => {\r\n  //hook\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleNameSearch(name);\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search__container\">\r\n      <div className=\"iconSearch\">\r\n        <FaSearch />\r\n      </div>\r\n      <form className=\"search__form\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"search__form-input\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          placeholder=\" type Name or Id number\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        ></input>\r\n        <button className=\"form__btn\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchNameForm;\r\n","import Navbar from \"./Navbar\";\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n// import nodata from \"../../img/nodata.png\"\r\nimport pokeLogo from \"../../img/pikaPokemon.png\";\r\nimport SearchGenderForm from \"../SearchGenderForm\";\r\nimport SearchNameForm from \"../SearchNameForm\";\r\nimport { FaHome } from \"react-icons/fa\";\r\n\r\nconst Navbar = (props) => {\r\n  const { handleGenderSearch, handleNameSearch, initial } = props;\r\n  const handleClickHome = (e) => {\r\n    e.preventDefault();\r\n    initial();\r\n  };\r\n\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <div className=\"pokemon__logo\">\r\n        <img className=\"pokemon__logo-img\" src={pokeLogo} alt=\"pokemon_logo\" />\r\n        <div className=\"icon\" onClick={(e) => handleClickHome(e)}>\r\n          <FaHome />\r\n        </div>\r\n        <div className=\"pokemon__logo-name\">Show me Pokemon!</div>\r\n      </div>\r\n      <div className=\"navbar__menu\">\r\n        <SearchGenderForm handleGenderSearch={handleGenderSearch} />\r\n        <SearchNameForm handleNameSearch={handleNameSearch} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import SimplePagination from \"./SimplePagination\";\r\n\r\nexport default SimplePagination;\r\n","import React from \"react\";\r\n\r\nconst SimplePagination = (props) => {\r\n  const { prev, next } = props;\r\n  return (\r\n    <div className=\"btn\">\r\n      <button onClick={() => prev()}>Prev</button>\r\n      <button onClick={next}>Next</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimplePagination;\r\n","import AdvancedPagination from \"./AdvancedPagination\";\r\n\r\nexport default AdvancedPagination;\r\n","import React from \"react\";\r\n\r\nconst AdvancedPagination = ({ pokemonPerPage, totalPokemons, paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPokemons / pokemonPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"btn pagination\">\r\n        {pageNumbers.map((number) => (\r\n          <li key={number}>\r\n            <button onClick={() => paginate(number)}>{number}</button>\r\n            {number}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AdvancedPagination;\r\n","const typeColors = {\r\n  bug: \"#729f3f\",\r\n  dragon: \"#53a4cf\",\r\n  fairy: \"#fdb9e9\",\r\n  fire: \"#fd7d24\",\r\n  ghost: \"#7b62a3\",\r\n  ground: \"#f7de3f\",\r\n  normal: \"#a4acaf\",\r\n  pyschic: \"#f366b9\",\r\n  steel: \"#9eb7b\",\r\n  dark: \"#707070\",\r\n  electric: \"#eed535\",\r\n  fighting: \"#d56723\",\r\n  flying: \"#3dc7ef\",\r\n  grass: \"#9bcc50\",\r\n  ice: \"#51c4e7\",\r\n  poison: \"#b97fc9\",\r\n  rock: \"#a38c21\",\r\n  water: \"#4592c4\",\r\n};\r\n\r\nexport default typeColors;\r\n","import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\n// import kolorow wlasciwosci\r\nimport pokemonColorTypes from \"../../helpers/pokemonColorTypes\";\r\nimport nodata from \"../../img/nodata.png\";\r\n\r\nconst Card = (props) => {\r\n  // mozesz tez napisac zamiast props {pokemon}\r\n  const [active, setActive] = useState(false);\r\n\r\n  const { pokemon } = props;\r\n  // jak mamyobiekt to jest prosciej jak tablice to iterujemy lub przekazujemy indexy\r\n  const pokemonFrontFoto = pokemon.sprites.front_default;\r\n  const pokemonBackFoto = pokemon.sprites.back_default;\r\n  const pokemonBackShinyFoto = pokemon.sprites.back_shiny;\r\n\r\n  const showElement = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Card\">\r\n      {pokemonFrontFoto ? (\r\n        <div className=\"Card__img\">\r\n          <div className=\"Card__img--normal\">\r\n            <img\r\n              src={pokemon.sprites.front_default}\r\n              alt=\"pokemon_front_image\"\r\n            />\r\n            {pokemonBackFoto ? (\r\n              <img\r\n                src={pokemon.sprites.back_default}\r\n                alt=\"pokemon_back_image\"\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <button className=\"showBtn\" onClick={showElement}>\r\n            {active ? \"hide shiny version\" : \"show shiny version\"}\r\n          </button>\r\n          {active ? (\r\n            <div className=\"Card__img--shiny\">\r\n              <img\r\n                src={pokemon.sprites.front_shiny}\r\n                alt=\"pokemon_front__shiny_image\"\r\n              />\r\n              {pokemonBackShinyFoto ? (\r\n                <img\r\n                  src={pokemon.sprites.back_shiny}\r\n                  alt=\"pokemon_back_shiny_image\"\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <div className=\"Card__img\">\r\n          <img\r\n            className=\"nologo\"\r\n            // src={process.env.PUBLIC_URL + \"/nodata.png\"}\r\n            src={nodata}\r\n            alt=\"nodata_image\"\r\n          />\r\n        </div>\r\n      )}\r\n      {/* nazwa i typy */}\r\n      <div className=\"Card__name\">{pokemon.name}</div>\r\n      <p className=\"Card__type__title\">Type:</p>\r\n      <div className=\"Card__types\">\r\n        {pokemon.types.map((typeArr, i) => {\r\n          return (\r\n            <div\r\n              className=\"Card__type\"\r\n              key={i}\r\n              style={{\r\n                backgroundColor: pokemonColorTypes[typeArr.type.name],\r\n              }}\r\n            >\r\n              {typeArr.type.name}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {/* pozostale info */}\r\n      <div className=\"Card__info\">\r\n        <div className=\"Card__data\">\r\n          <p className=\"title\">Weight</p>\r\n          <p className=\"Card__data--value\">{pokemon.weight}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"Card__info\">\r\n        <div className=\"Card__data\">\r\n          <p className=\"title\">Height</p>\r\n          <p className=\"Card__data--value\">{pokemon.height}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"Card__info\">\r\n        <div className=\"Card__data\">\r\n          <p className=\"title\">Ability</p>\r\n          {pokemon.abilities.map((ability, i) => {\r\n            return (\r\n              <p className=\"Card__type--ability\" key={i}>\r\n                {ability.ability.name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      {/* // inna wersja   */}\r\n      {/* // return pokemon.abilities[0].ability.name  */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import PokemonContent from \"./PokemonContent\";\r\n\r\nexport default PokemonContent;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\n\r\nconst PokemonContent = ({ pokemonData, loading }) => {\r\n  // console.log(pokemonData);\r\n  // console.log(typeof pokemonData);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <div className=\"grid-container\">\r\n          {pokemonData.map((pokemon, i) => {\r\n            return <Card key={i} pokemon={pokemon} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonContent;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import logo from \"./logo.svg\";\r\nimport { getAllPokemon, getSinglePokemon } from \"./services/pokemon\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport SimplePagination from \"./components/SimplePagination\";\r\nimport AdvancedPagination from \"./components/AdvancedPagination\";\r\n// import SearchGenderForm from \"./components/SearchGenderForm\";\r\nimport PokemonContent from \"./components/PokemonContent\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  // hooks\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(\"\");\r\n  const [prevUrl, setPrevUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [searching, setSearching] = useState(false);\r\n  //pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pokemonPerPage] = useState(20);\r\n  const [totalPokemons, setTotalPokemons] = useState(0);\r\n  // const [indexOfFirstPokemon, setIndexOfFirstPokemon] = useState(0);\r\n  const [gender, setGender] = useState(0);\r\n  const initialUrl = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\n  // zachowuje sie jak componentdidmount, jak sie zamontuje component to wtedy uruchamiamy useEffect i  fetch data from url\r\n  useEffect(() => {\r\n    setSearching(false);\r\n    async function fetchData() {\r\n      let response = await getAllPokemon(initialUrl);\r\n      // console.log(response);\r\n      setNextUrl(response.next);\r\n      setPrevUrl(response.previous);\r\n      await loadingSinglePokemon(response.results);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  // [] clean it up only once (on mount and unmount), unikamy zapetlenia renderu never ending loop, uruchamia sie tylko raz\r\n\r\n  //paginacja podstawowa i wywolanie fetcha nastepnej storny\r\n  const next = async () => {\r\n    setLoading(true);\r\n    setSearching(false);\r\n    let data = await getAllPokemon(nextUrl);\r\n    // console.log(nextUrl);\r\n    await loadingSinglePokemon(data.results);\r\n    setNextUrl(data.next);\r\n    // console.log(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  };\r\n\r\n  //paginacja i wywolanie fetcha poprzedniej strony\r\n  const prev = async () => {\r\n    if (!prevUrl) return;\r\n    setLoading(true);\r\n    setSearching(false);\r\n    let data = await getAllPokemon(prevUrl);\r\n    await loadingSinglePokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  };\r\n\r\n  const initial = async () => {\r\n    setSearching(false);\r\n    async function fetchData() {\r\n      let response = await getAllPokemon(initialUrl);\r\n      setNextUrl(response.next);\r\n      setPrevUrl(response.previous);\r\n      await loadingSinglePokemon(response.results);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  };\r\n  //obsluguje wyszukiwanie wg nazwy lub numeru id\r\n  const handleNameSearch = async (name) => {\r\n    setSearching(true);\r\n    const currentUrl = `${initialUrl}/${name}`;\r\n    let _pokemonData = await getSinglePokemon(currentUrl);\r\n    // przy pojedynczym obiekcie trzeba przekształcić w tablicę\r\n    _pokemonData = new Array(_pokemonData);\r\n    setPokemonData(_pokemonData);\r\n  };\r\n\r\n  //obsluguje wyszukiwanie za pomoca search option wg gender\r\n  const handleGenderSearch = async (gender) => {\r\n    setSearching(true);\r\n    setLoading(true);\r\n    setGender(gender);\r\n    const pokemonGenderArray = [];\r\n    let data = await getAllPokemon(\r\n      `https://pokeapi.co/api/v2/gender/${gender}/`\r\n    );\r\n    // 1. wyjecie z json gender nazwy pokemonow i przelozenie do tablicy pokemonGenderArray\r\n    data.pokemon_species_details.map((pokemon) => {\r\n      let pokemonName = pokemon.pokemon_species.name;\r\n      pokemonGenderArray.push(pokemonName);\r\n      return pokemonGenderArray;\r\n    });\r\n    setTotalPokemons(pokemonGenderArray.length);\r\n\r\n    //2. pociac tablice na czesci po 20 szt funkcja chunk\r\n    let chunked_arr = chunk(pokemonGenderArray, pokemonPerPage);\r\n    // 3. dopasowac nr kliknietej strony do odpowiedniej tablicy - i tu jest problem - nie chce sie dopasowac setCurrenPage!\r\n\r\n    console.log(`currentPage: ${currentPage}`);\r\n    //UWAGA tutaj jest problem, currentPage nie chce sie uaktualnic currentPage mimo ze kliknieta paginacja - jak to zrobic?\r\n    let currentPokemonArr = chunked_arr[currentPage - 1];\r\n    // 1a. stworzyc tablice z linkami do funkcji wywolujacej\r\n    currentPokemonArr = currentPokemonArr.map(\r\n      (pokemon) => `https://pokeapi.co/api/v2/pokemon/${pokemon}`\r\n    );\r\n\r\n    //2a. wywolac w funkcji\r\n    await loadingSearchedPokemon(currentPokemonArr);\r\n    setLoading(false);\r\n  };\r\n\r\n  // zdublowana funckja ladujaca pokemony na strone, warto by to ujednolicic\r\n  const loadingSearchedPokemon = async (data) => {\r\n    //niestety mnoze funkcje :(\r\n    let _pokemonData = await Promise.all(\r\n      data.map(async (pokemon) => {\r\n        let pokemonRecord = await getSinglePokemon(pokemon);\r\n        return pokemonRecord;\r\n      })\r\n    );\r\n    setPokemonData(_pokemonData);\r\n  };\r\n\r\n  // funkcja ladujaca pojedyncze pokemony na strone główną\r\n  const loadingSinglePokemon = async (data) => {\r\n    // console.log(data);\r\n    // promise to all - zwroci promisa jak wszystkie z tych zapytan zostana zwrocone. czyli jak przeiterujemy do konca i wrzucamy to wsyztsko do zmiennej _pokemonData\r\n    let _pokemonData = await Promise.all(\r\n      data.map(async (pokemon) => {\r\n        // kazdy obiekt ma dwie wartosci\r\n        let pokemonRecord = await getSinglePokemon(pokemon.url);\r\n        // console.log(pokemonRecord);\r\n        //zwracamy wynik i przekazujemy do state\r\n        return pokemonRecord;\r\n      })\r\n    );\r\n    //zmieniamy stan\r\n    setPokemonData(_pokemonData);\r\n  };\r\n\r\n  //change page in pagination, przekazanyz klikniecia pageNumber w AdvancedPagination to jest zmienna number\r\n  const paginate = (pageNumber) => {\r\n    console.log(`pageNumber: ${pageNumber}`);\r\n    handleGenderSearch(gender);\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // funkcja krojaca tablice\r\n  function chunk(array, size) {\r\n    const chunked_arr = [];\r\n    let index = 0;\r\n    while (index < array.length) {\r\n      chunked_arr.push(array.slice(index, size + index));\r\n      index += size;\r\n    }\r\n    return chunked_arr;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        handleGenderSearch={handleGenderSearch}\r\n        handleNameSearch={handleNameSearch}\r\n        initial={initial}\r\n      />\r\n      {searching ? (\r\n        <AdvancedPagination\r\n          pokemonPerPage={pokemonPerPage}\r\n          totalPokemons={totalPokemons}\r\n          paginate={paginate}\r\n        />\r\n      ) : (\r\n        <SimplePagination next={next} prev={prev} />\r\n      )}\r\n      <PokemonContent pokemonData={pokemonData} loading={loading} />\r\n      {searching ? (\r\n        <AdvancedPagination\r\n          pokemonPerPage={pokemonPerPage}\r\n          totalPokemons={totalPokemons}\r\n          paginate={paginate}\r\n        />\r\n      ) : (\r\n        <SimplePagination next={next} prev={prev} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// inspiracja:\r\n//TraversyMedia\r\n// https://github.com/rivera1294/pokemon/tree/master/src\r\n//stackoverflow\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}